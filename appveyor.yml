version: '{build}'

branches:
  except:
    - /pr\/.+/

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      BUILD_TYPE: MSVC15_clang_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      BUILD_TYPE: MSVC19_64

install:
- call "C:\\Miniconda36-x64\\Scripts\\activate.bat"
- conda config --set always_yes yes
- conda update -n base conda
- conda config --add channels conda-forge
- conda config --set channel_priority strict
- if [%BUILD_TYPE%]==[MSVC19_64] conda create --name obake cmake boost-cpp mpir mpfr tbb tbb-devel
- if [%BUILD_TYPE%]==[MSVC15_clang_64] conda create --name obake "cmake<3.16" boost-cpp mppp tbb tbb-devel clangdev ninja abseil-cpp
- call activate obake
- if [%BUILD_TYPE%]==[MSVC15_clang_64] clang-cl -v
- if [%BUILD_TYPE%]==[MSVC15_clang_64] call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64

build_script:
- set CONDA_PREFIX_PATH=C:\Miniconda36-x64\envs\obake\Library
- mkdir build
- cd build

# mp++ setup (only for the MSVC19_64 build).
- if [%BUILD_TYPE%]==[MSVC19_64] git clone https://github.com/bluescarni/mppp.git
- if [%BUILD_TYPE%]==[MSVC19_64] cd mppp
- if [%BUILD_TYPE%]==[MSVC19_64] mkdir build
- if [%BUILD_TYPE%]==[MSVC19_64] cd build

- if [%BUILD_TYPE%]==[MSVC19_64] cmake .. -G "Visual Studio 16 2019" -A x64 -DMPPP_WITH_MPFR=yes -DCMAKE_PREFIX_PATH=%CONDA_PREFIX_PATH% -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX_PATH% -DCMAKE_CXX_STANDARD=17
- if [%BUILD_TYPE%]==[MSVC19_64] cmake --build . --config RelWithDebInfo --target install

- if [%BUILD_TYPE%]==[MSVC19_64] cd ..
- if [%BUILD_TYPE%]==[MSVC19_64] cd ..

# abseil setup (only for the MSVC19_64 build).
- if [%BUILD_TYPE%]==[MSVC19_64] git clone https://github.com/abseil/abseil-cpp.git
- if [%BUILD_TYPE%]==[MSVC19_64] cd abseil-cpp
- if [%BUILD_TYPE%]==[MSVC19_64] git checkout 3c98fcc0461bd2a4b9c149d4748a7373a225cf4b
- if [%BUILD_TYPE%]==[MSVC19_64] mkdir build
- if [%BUILD_TYPE%]==[MSVC19_64] cd build
- if [%BUILD_TYPE%]==[MSVC19_64] cmake .. -G "Visual Studio 16 2019" -A x64 -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX_PATH% -DCMAKE_CXX_STANDARD=17
- if [%BUILD_TYPE%]==[MSVC19_64] cmake --build . --config RelWithDebInfo --target install
- if [%BUILD_TYPE%]==[MSVC19_64] cd ..
- if [%BUILD_TYPE%]==[MSVC19_64] cd ..

# obake
- if [%BUILD_TYPE%]==[MSVC19_64] cmake .. -G "Visual Studio 16 2019" -A x64 -DOBAKE_BUILD_TESTS=yes
- if [%BUILD_TYPE%]==[MSVC19_64] cmake --build . --config RelWithDebInfo

- if [%BUILD_TYPE%]==[MSVC15_clang_64] cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_PREFIX_PATH=%CONDA_PREFIX_PATH% -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX_PATH% -DOBAKE_BUILD_TESTS=ON
- if [%BUILD_TYPE%]==[MSVC15_clang_64] cmake --build . -- -v
- if [%BUILD_TYPE%]==[MSVC15_clang_64] cmake --build . --target install


test_script:
# NOTE: ensure the PATH variable contains the path to the obake dll,
# otherwise the tests will fail to run.
- if [%BUILD_TYPE%]==[MSVC19_64] set PATH=%PATH%;%CD%\RelWithDebInfo
- if [%BUILD_TYPE%]==[MSVC19_64] ctest -j4 -V -C RelWithDebInfo

- if [%BUILD_TYPE%]==[MSVC15_clang_64] set PATH=%PATH%;%CD%
- if [%BUILD_TYPE%]==[MSVC15_clang_64] ctest -j4 -V .

# Enable this to be able to login to the build worker. You can use the
# `remmina` program in Ubuntu, use the login information that the line below
# prints into the log.
# on_finish:
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
